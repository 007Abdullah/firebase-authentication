{"version":3,"sources":["firebase.js","context/AuthContext.js","components/Signup.js","components/Dashboard.jsx","components/Login.jsx","components/PrivateRoute.js","components/ForgotPassword.jsx","components/UpdateProfile.jsx","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","restPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","event","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec4b8f6f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n})\r\n\r\nexport const auth = app.auth();\r\nexport default app","import React, { useContext, useState, useEffect } from 'react'\r\nimport { auth } from './../firebase';\r\nimport { firebase } from 'firebase/app';\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    function logout() {\r\n        return auth.signOut();\r\n    }\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n\r\n    }\r\n\r\n\r\n    function restPassword(email) {\r\n        auth.sendPasswordResetEmail(email)\r\n    }\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        restPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n// export { useAuth, AuthProvider }","import React, { useRef, useState } from \"react\";\r\nimport { Card, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from './../context/AuthContext'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { signup, currentUser } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Password do Not Match')\r\n        }\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push('/login')\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                    {currentUser && currentUser.email}\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirm</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already Have an Account? <Link to=\"/login\">Log In</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","\r\nimport React, { useState } from 'react'\r\nimport { Card, Button, Alert } from 'react-bootstrap'\r\nimport { useAuth } from './../context/AuthContext'\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState(\"\");\r\n    const { currentUser, logout } = useAuth();\r\n    const history = useHistory();\r\n\r\n\r\n\r\n    async function handleLogout() {\r\n        setError(\"\")\r\n\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch {\r\n            setError(\"Failed to logout\")\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong>Email: </strong>{currentUser.email}\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}>Logout</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Card, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from './../context/AuthContext'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory()\r\n\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to Sign in')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Login</h2>\r\n                    {/* {currentUser.email} */}\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Login In</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forgot-password\">Forget Password?</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from './../context/AuthContext'\r\n\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n\r\n    const { currentUser } = useAuth();\r\n\r\n\r\n    return (\r\n        <Route {...rest} render={props => {\r\n            return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }}>\r\n\r\n        </Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Card, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from './../context/AuthContext'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef();\r\n    const { restPassword } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n\r\n\r\n        try {\r\n            setMessage('Check Your Inbox For Further Instructions')\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await restPassword(emailRef.current.value)\r\n            setMessage('Check Your Inbox For Further Instructions')\r\n\r\n\r\n        } catch {\r\n            setError('Failed to Reset Password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n                    {/* {currentUser.email} */}\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Reset Password</Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Card, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useAuth } from './../context/AuthContext'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { currentUser, updatePassword, updateEmail } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Password do Not Match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            history.push('/');\r\n        }).catch(() => {\r\n            setError('Failed To Update Account')\r\n        }).finally(() => {\r\n            setLoading(false)\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} defaultValue={currentUser.email} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef}  placeholder=\"Leave blank to keep the same\" />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirm</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef}  placeholder=\"Leave blank to keep the same\" />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Update</Button>\r\n\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\">Cancel</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport Signup from \"./Signup\";\r\nimport { Container } from 'react-bootstrap'\r\nimport { AuthProvider } from './../context/AuthContext';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Dashboard from './Dashboard'\r\nimport Login from './Login'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport ForgotPassword from './ForgotPassword';\r\nimport UpdateProfile from './UpdateProfile';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"w-100\" style={{ maxWidth: '400px' }}>\r\n        <Router>\r\n          <AuthProvider>\r\n            <Switch>\r\n              <PrivateRoute exact path='/' component={Dashboard} />\r\n              <PrivateRoute path='/update-profile' component={UpdateProfile} />\r\n              \r\n              <Route path='/signup' component={Signup} />\r\n              <Route path='/login' component={Login} />\r\n              <Route path='/forgot-password' component={ForgotPassword} />\r\n\r\n            </Switch>\r\n          </AuthProvider>\r\n        </Router>\r\n\r\n        {/* <Signup /> */}\r\n\r\n\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}